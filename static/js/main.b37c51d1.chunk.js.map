{"version":3,"sources":["reportWebVitals.js","components/Alert.js","components/Navbar.js","components/Textform.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capatilize","msg","Navbar","navMode","mode","href","title","id","onClick","primaryMode","dangerMode","warningMode","darkMode","htmlFor","color","Textform","useState","text","setText","heading","value","onChange","event","target","backgroundColor","bgColor","rows","disabled","length","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","App","setMode","setNavMode","setColor","setBgColor","setAlert","message","setTimeout","modes","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b37c51d1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatilize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{ height: \"50px\" }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capatilize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.navMode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">Link</a>\r\n                            </li>\r\n                        </ul>\r\n                        {/* Radio button */}\r\n                        <button type=\"button\" className=\"btn btn-primary me-2\" onClick={props.primaryMode}></button>\r\n                        <button type=\"button\" className=\"btn btn-danger me-2\" onClick={props.dangerMode}></button>\r\n                        <button type=\"button\" className=\"btn btn-warning me-2\" onClick={props.warningMode}></button>\r\n                        <div className=\"form-check form-switch\" onClick={props.darkMode}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"darkMode\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"darkMode\" style={{color:props.mode==='light'?'black':'white'}}>Enable Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const converToUpperCase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper Case\", \"success\")\r\n    }\r\n    const converToLowerCase = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower Case\", \"success\")\r\n    }\r\n    const copyText = () => {\r\n        let newText = document.getElementById(\"myform\")\r\n        newText.select()\r\n        navigator.clipboard.writeText(newText.value)\r\n        props.showAlert(\"Copied to clipboard\", \"success\")\r\n    }\r\n    const ClearSpaces = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Cleared extra spaces\", \"success\")\r\n\r\n    }\r\n    const onChangeHandler = (event) => {\r\n        // console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <div className=\"mb-3\" style={{ color: props.mode === \"light\" ? \"#212529\" : \"white\" }}>\r\n                <h2 className=\"my-3\" >{props.heading}</h2>\r\n                <textarea className=\"form-control\" id=\"myform\" value={text} onChange={onChangeHandler} style={{ backgroundColor: props.mode === props.color ? \"white\" : props.bgColor, color: props.mode === \"light\" ? \"#212529\" : \"white\" }} rows=\"6\"></textarea>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 me-2\" onClick={converToUpperCase}>Conver to UpperCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 me-2\" onClick={converToLowerCase}>Conver to LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3 me-2\" onClick={copyText}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-3\" onClick={ClearSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            {/* outer element */}\r\n            <div className=\"container\" style={{ color: props.mode === \"light\" ? \"#212529\" : \"white\" }}>\r\n                <h3>{text.length} letters and {text.split(\" \").filter((element)=>{return element.length!==0}).length} words</h3>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Enter the text to preview\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n\nexport default function App() {\n  const [mode, setMode] = useState(\"light\")\n  const [navMode, setNavMode] = useState(\"light\")\n  const [color, setColor] = useState(\"light\")\n  const [bgColor, setBgColor] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  // Alert\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const darkMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\")\n      setNavMode('dark')\n      setColor('light')\n      setBgColor('#212529')\n      showAlert(\"Dark mode has been elabled\",\"success\")\n      document.body.style.backgroundColor = \"#212529\"\n    }\n    else {\n      setMode(\"light\")\n      setNavMode(\"light\")\n      setColor('light')\n      // setBgColor(\"black\")\n      showAlert(\"light mode has been elabled\",\"success\")\n      document.body.style.backgroundColor = \"white\"\n    }\n  }\n  const primaryMode = () => {\n    if (mode === 'light') {\n      setMode(\"primary\")\n      setNavMode(\"dark\")\n      setColor('light')\n      setBgColor('#15202B')\n      document.body.style.backgroundColor = \"#15202B\"\n      document.body.style.color = \"white\"\n    }\n    else {\n      setMode('light')\n      setNavMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n  }\n  const dangerMode = () => {\n    if (mode === 'light') {\n      setMode(\"danger\")\n      setNavMode(\"dark\")\n      setColor('light')\n      setBgColor('#8c4850')\n      document.body.style.backgroundColor = \"#8c4850\"\n      document.body.style.color = \"white\"\n    }\n    else {\n      setMode('light')\n      setNavMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n  }\n  const warningMode = () => {\n    if (mode === 'light') {\n      setMode(\"warning\")\n      setNavMode(\"light\")\n      setColor('light')\n      setBgColor('#e8c869')\n      document.body.style.backgroundColor = \"#e8c869\"\n      document.body.style.color = \"black\"\n    }\n    else {\n      setMode('light')\n      setNavMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n  }\n\n  const modes = [darkMode, primaryMode, dangerMode, warningMode]\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} navMode={navMode} darkMode={modes[0]} primaryMode={modes[1]} dangerMode={modes[2]} warningMode={modes[3]} />\n      <Alert alert={alert} />\n      <Textform heading=\"Enter the Text\" showAlert={showAlert} mode={mode} color={color} bgColor={bgColor} primaryMode={modes[1]} dangerMode={modes[2]} warningMode={modes[3]} />\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}